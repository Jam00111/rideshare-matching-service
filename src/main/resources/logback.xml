<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<property name="LOGS" value="./logs" />

	<appender name="Console"
		class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				%green(%d{ISO8601}) %highlight(%-5level) [%blue(%t)]
				%yellow(%C{1.}): %msg%n%throwable
			</Pattern>
		</layout>
	</appender>

	<!-- This configuration is for tracking INFO and WARN messgaes from the operations 
		of SpringBoot. If you want to add to the INFO output use: 
		logger.info("An INFO Message");
		logger.warn("A WARN Message");  
		to create custom info or warn messages -->
	<appender name="InfoFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOGS}/info-logger.log</file>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
		</encoder>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily and when the file reaches 10 MegaBytes -->
			<fileNamePattern>${LOGS}/archived/info-logger-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<!-- This configuration is for tracking DEBUG messgaes from the operations 
		of SpringBoot as well as any debug messages we add. If you want to add to 
		the DEBUG output use: 
		logger.debug("A DEBUG Message"); 
		to create custom DEBUG 
		messages -->
	<appender name="DebugFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOGS}/debug-logger.log</file>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
		</encoder>

		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily and when the file reaches 10 MegaBytes -->
			<fileNamePattern>${LOGS}/archived/debug-logger-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<!-- This configuration is for tracking ERROR and WARN messgaes from the 
		operations of SpringBoot as well as any ERROR or WARN messages we add. If 
		you want to add to the ERROR or WARN output use: 
		logger.warn("A WARN Message"); 
		logger.error("An ERROR Message"); 
		to create custom ERROR and WARN messages -->
	<appender name="ProblemsFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOGS}/problems-logger.log</file>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
		</encoder>

		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily and when the file reaches 10 MegaBytes -->
			<fileNamePattern>${LOGS}/archived/problems-logger-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<!-- This configuration is for tracing new code and debugging it with out 
		seeing Spring info and debug logging. Use: 
		logger.trace("A TRACE Message"); 
		to create a trace message for tracking the flow of your code, user tracking, 
		or anything that we are concerned with that can be separated from the flow 
		of SpringBoot. -->
	<appender name="TraceFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOGS}/trace-logger.log</file>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
		</encoder>

		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily and when the file reaches 10 MegaBytes -->
			<fileNamePattern>${LOGS}/archived/trace-logger-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<!-- Logging has been moved to a file to clean up the console so it isn't 
		flooded with messages -->
	<!-- LOG everything at INFO and WARN level -->
	<root level="info">
		<appender-ref ref="InfoFile" />
		<!-- <appender-ref ref="Console" /> -->
	</root>
	<logger name="com.revature" level="warn" additivity="false">
		<appender-ref ref="InfoFile" />
	</logger>
	
	<!-- LOG "com.revature*" at DEBUG level -->
	<root level="debug">
		<appender-ref ref="DebugFile" />
	</root>

	<!-- LOG "com.revature*" at TRACE level -->
	<logger name="com.revature" level="trace" additivity="false">
		<appender-ref ref="TraceFile" />
		<appender-ref ref="Console" />
	</logger>
	<!-- LOG "com.revature*" at ERROR & WARN level -->
	<logger name="com.revature" level="error" additivity="false">
		<appender-ref ref="ProblemsFile" />
		<appender-ref ref="Console" />
	</logger>
	<logger name="com.revature" level="warn" additivity="false">
		<appender-ref ref="ProblemsFile" />
		<appender-ref ref="Console" />
	</logger>

</configuration>